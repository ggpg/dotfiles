#!/usr/bin/env bash

pwd=$(pwd)
datadir="$pwd/data"
files=(.vimrc .tmux.conf .bash_profile .vim)
configs=$( ls $datadir/.config)
bins=$(ls $datadir/bin)

announce(){
    echo -e "\n\033[32m$1\033[39m"
}

say(){
    echo -e "$1"
}

do_backup(){
    announce "Backing up existing configuration"
    for file in ${files[*]}; do
        say " backup:\t$file"
        [[ -f ~/$file || -d ~/$file ]] && mv ~/$file ~/$file.bkp
    done
}

do_restore(){
    announce "Restoring backed up configs"
    for file in ${files[*]}; do
        say " restore:\t$file"
        [[ -f ~/$file.bkp || -d ~/$file.bkp ]] && mv ~/$file.bkp ~/$file
    done
}

do_link_files(){
    announce "Linking files"
    for file in ${files[*]}; do
        say " linking:\t$file"
        ln -s $datadir/$file ~/$file
    done
}

do_link_configs(){
    announce "Linking .config directories"
    for dir in $configs; do
        say " linking:\t~/.config/$dir"
        ln -s $datadir/.config/$dir ~/.config/$dir
    done
}

do_link_bins(){
    for file in $bins; do
        say " linking:\t~/bin/$file"
        ln -s $datadir/bin/$file ~/bin/$file
    done
}

do_unlink(){
    announce "Unlinking [cleanup]"

    for file in ${files[*]}; do
        say " unlink:\t~/$file"
        [ -L ~/$file ] && unlink ~/$file
    done

    for file in ${configs[*]}; do
        say " unlink:\t~/.config/$file"
        [ -L ~/.config/$file ] && unlink ~/.config/$file
    done

    for file in ${bins[*]}; do
        say " unlink:\t~/bin/$file"
        [ -L ~/bin/$file ] && unlink ~/bin/$file
    done
}


case $1 in

    link)
        do_backup
        do_link_files
        do_link_configs
        do_link_bins
        exit 0
    ;;

    unlink)
        do_unlink
        do_restore
        exit 0
    ;;

    configure)
        announce "Creating ~/bin directory"
        [ ! -d ~/bin ] &&  mkdir ~/bin
        exit 0
    ;;

    *)
        echo "HELP"
    ;;
esac
